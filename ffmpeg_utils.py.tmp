import os, subprocess, datetime as dt
from pathlib import Path

def ensure_dirs():
    Path("/data/uploads").mkdir(parents=True, exist_ok=True)
    Path("/data/outputs").mkdir(parents=True, exist_ok=True)

def transcode(input_path: str, outdir: str, basename: str):
    """
    Multi-profile H.264 to stress CPU. Veryslow preset, CRF ladder.
    """
    profiles = [
        ("426x240", "crf=30"),
        ("640x360", "crf=28"),
        ("854x480", "crf=26"),
        ("1280x720", "crf=24"),
    ]
    Path(outdir).mkdir(parents=True, exist_ok=True)
    logs = []
    for res, crf in profiles:
        out = os.path.join(outdir, f"{basename}_{res}.mp4")
        cmd = [
            "ffmpeg", "-y",
            "-i", input_path,
            "-vf", f"scale={res}",
            "-c:v", "libx264", "-preset", "veryslow", "-crf", crf.split("=")[1],
            "-c:a", "aac", "-b:a", "128k",
            out
        ]
        start = dt.datetime.utcnow()
        try:
            proc = subprocess.run(cmd, capture_output=True, text=True, check=True)
            logs.append(f"{res} OK in {(dt.datetime.utcnow()-start).total_seconds()}s")
        except subprocess.CalledProcessError as e:
            logs.append(f"{res} FAIL: {e.stderr[-400:]}")
            raise
    return "\n".join(logs)

